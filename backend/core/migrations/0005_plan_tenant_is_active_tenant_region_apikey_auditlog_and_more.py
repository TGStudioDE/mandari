# Generated by Django 5.0.7 on 2025-09-28 15:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0004_tenant_color_primary_tenant_color_secondary_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Plan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.SlugField(unique=True)),
                ("name", models.CharField(max_length=100)),
                ("features_json", models.JSONField(blank=True, default=dict)),
                ("hard_limits_json", models.JSONField(blank=True, default=dict)),
                ("soft_limits_json", models.JSONField(blank=True, default=dict)),
            ],
        ),
        migrations.AddField(
            model_name="tenant",
            name="is_active",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="tenant",
            name="region",
            field=models.CharField(blank=True, default="", max_length=50),
        ),
        migrations.CreateModel(
            name="ApiKey",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("scopes", models.JSONField(blank=True, default=list)),
                ("hashed_key", models.CharField(max_length=128, unique=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_used_at", models.DateTimeField(blank=True, null=True)),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="api_keys",
                        to="core.tenant",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action", models.CharField(max_length=100)),
                (
                    "target_type",
                    models.CharField(blank=True, default="", max_length=100),
                ),
                ("target_id", models.CharField(blank=True, default="", max_length=100)),
                ("diff_json", models.JSONField(blank=True, default=dict)),
                ("at", models.DateTimeField(auto_now_add=True)),
                (
                    "actor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="audit_logs",
                        to="core.tenant",
                    ),
                ),
            ],
            options={
                "ordering": ["-at"],
            },
        ),
        migrations.CreateModel(
            name="Subscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status", models.CharField(default="active", max_length=30)),
                ("period_start", models.DateTimeField()),
                ("period_end", models.DateTimeField()),
                (
                    "billing_account_id",
                    models.CharField(blank=True, default="", max_length=100),
                ),
                (
                    "org",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscription",
                        to="core.tenant",
                    ),
                ),
                (
                    "plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="core.plan"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Subspace",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("key", models.SlugField()),
                ("type", models.CharField(blank=True, default="", max_length=50)),
                ("domain", models.CharField(blank=True, default="", max_length=255)),
                ("settings_json", models.JSONField(blank=True, default=dict)),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subspaces",
                        to="core.tenant",
                    ),
                ),
            ],
            options={
                "unique_together": {("tenant", "key")},
            },
        ),
        migrations.CreateModel(
            name="Note",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("body", models.TextField(blank=True, default="")),
                ("tags", models.JSONField(blank=True, default=list)),
                (
                    "related_entity",
                    models.CharField(blank=True, default="", max_length=100),
                ),
                ("visibility", models.CharField(default="internal", max_length=20)),
                ("status", models.CharField(default="open", max_length=20)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notes",
                        to="core.tenant",
                    ),
                ),
                (
                    "subspace",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="notes",
                        to="core.subspace",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WebhookEndpoint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("url", models.URLField()),
                ("secret", models.CharField(max_length=128)),
                ("events", models.JSONField(blank=True, default=list)),
                ("enabled", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="webhook_endpoints",
                        to="core.tenant",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WorkflowConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rules_json", models.JSONField(blank=True, default=dict)),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workflow_configs",
                        to="core.tenant",
                    ),
                ),
                (
                    "subspace",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="workflow_configs",
                        to="core.subspace",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SpaceMembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("role", models.CharField(default="member", max_length=50)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="space_memberships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "subspace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memberships",
                        to="core.subspace",
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "subspace")},
            },
        ),
        migrations.CreateModel(
            name="FeatureFlag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.CharField(max_length=100)),
                ("enabled", models.BooleanField(default=False)),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feature_flags",
                        to="core.tenant",
                    ),
                ),
                (
                    "subspace",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feature_flags",
                        to="core.subspace",
                    ),
                ),
            ],
            options={
                "unique_together": {("org", "subspace", "key")},
            },
        ),
        migrations.CreateModel(
            name="UsageMeter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("metric", models.CharField(max_length=50)),
                ("window_start", models.DateTimeField()),
                ("window_end", models.DateTimeField()),
                ("value", models.BigIntegerField(default=0)),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usage_meters",
                        to="core.tenant",
                    ),
                ),
            ],
            options={
                "index_together": {("org", "metric", "window_start", "window_end")},
            },
        ),
    ]
