version: "3.9"

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  memcached:
    image: memcached:1.6
    command: memcached -m 256
    ports:
      - "11211:11211"

  opensearch:
    image: opensearchproject/opensearch:2.14.0
    environment:
      - discovery.type=single-node
      - plugins.security.disabled=true
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - opensearch-data:/usr/share/opensearch/data

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.14.0
    environment:
      - OPENSEARCH_HOSTS=["http://opensearch:9200"]
      - OPENSEARCH_SSL_VERIFICATIONMODE=none
    ports:
      - "5601:5601"
    depends_on:
      - opensearch

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data

  create-bucket:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: ["/bin/sh","-c"]
    command: >
      "mc alias set local http://minio:9000 ${S3_ACCESS_KEY} ${S3_SECRET_KEY} &&
      mc mb -p local/${S3_BUCKET} || true &&
      mc anonymous set download local/${S3_BUCKET} || true"

  backend:
    build:
      context: ./backend
    env_file: .env
    command: bash -lc "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    environment:
      FRONTEND_BASE_URL: "http://localhost:4321"
      CORS_ALLOWED_ORIGINS: "http://localhost:4321,http://website:4321"
    volumes:
      - ./backend:/app
      - ./docs:/app/docs
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - memcached
      - opensearch
      - rabbitmq
      - minio

  ingest:
    build:
      context: ./services/ingest
    env_file: .env
    command: uvicorn app.main:app --host 0.0.0.0 --port 8001 --reload
    volumes:
      - ./services/ingest:/app
    ports:
      - "8001:8001"
    depends_on:
      - backend
      - rabbitmq

  ai:
    build:
      context: ./services/ai
    env_file: .env
    command: uvicorn app.main:app --host 0.0.0.0 --port 8002 --reload
    volumes:
      - ./services/ai:/app
    ports:
      - "8002:8002"
    depends_on:
      - backend

  website:
    image: node:20
    working_dir: /site
    env_file: .env
    command: bash -lc "npm install && npm run dev"
    volumes:
      - ./website:/site
    ports:
      - "4321:4321"
    depends_on:
      - backend

volumes:
  postgres-data:
  opensearch-data:
  minio-data:

